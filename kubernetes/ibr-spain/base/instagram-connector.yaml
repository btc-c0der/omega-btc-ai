apiVersion: v1
kind: ConfigMap
metadata:
  name: instagram-connector-config
  namespace: ibr-spain
data:
  NODE_ENV: "production"
  PORT: "3010"
  LOG_LEVEL: "info"
  INSTAGRAM_ACCOUNT: "ibrespana"
  REFRESH_INTERVAL: "900" # 15 minutes in seconds
  CACHE_TTL: "3600" # 1 hour in seconds
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  REDIS_PREFIX: "ibr:instagram:"
---
apiVersion: v1
kind: Secret
metadata:
  name: instagram-connector-secrets
  namespace: ibr-spain
type: Opaque
data:
  INSTAGRAM_ACCESS_TOKEN: "${INSTAGRAM_ACCESS_TOKEN_BASE64}"
  INSTAGRAM_APP_SECRET: "${INSTAGRAM_APP_SECRET_BASE64}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: instagram-connector
  namespace: ibr-spain
  labels:
    app: instagram-connector
    component: integration
spec:
  replicas: 1
  selector:
    matchLabels:
      app: instagram-connector
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: instagram-connector
        component: integration
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3010"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: instagram-connector
        image: ${DOCKER_REGISTRY}/ibr-spain/instagram-connector:${INSTAGRAM_CONNECTOR_VERSION}
        imagePullPolicy: Always
        ports:
        - containerPort: 3010
          name: http
        envFrom:
        - configMapRef:
            name: instagram-connector-config
        - secretRef:
            name: instagram-connector-secrets
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 3010
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3010
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: instagram-connector
  namespace: ibr-spain
  labels:
    app: instagram-connector
    component: integration
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3010
    protocol: TCP
    name: http
  selector:
    app: instagram-connector
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: instagram-refresh
  namespace: ibr-spain
spec:
  schedule: "*/15 * * * *"  # Every 15 minutes
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: instagram-refresh
            image: curlimages/curl:7.83.1
            args:
            - "-X"
            - "POST"
            - "http://instagram-connector/refresh"
          restartPolicy: OnFailure
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: instagram-connector-network-policy
  namespace: ibr-spain
spec:
  podSelector:
    matchLabels:
      app: instagram-connector
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: ibr-api
    - podSelector:
        matchLabels:
          app: ibr-ui
    ports:
    - protocol: TCP
      port: 3010
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
    ports:
    - protocol: TCP
      port: 443
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379 