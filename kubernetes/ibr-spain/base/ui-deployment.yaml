apiVersion: v1
kind: ConfigMap
metadata:
  name: ibr-ui-config
  namespace: ibr-spain
data:
  API_URL: "https://api.ibr-espana.org"
  REACT_APP_API_URL: "https://api.ibr-espana.org"
  REACT_APP_GOOGLE_MAPS_KEY: "${GOOGLE_MAPS_KEY}"
  REACT_APP_ANALYTICS_ID: "${ANALYTICS_ID}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ibr-ui
  namespace: ibr-spain
  labels:
    app: ibr-ui
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ibr-ui
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: ibr-ui
        component: frontend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      containers:
      - name: ibr-ui
        image: ${DOCKER_REGISTRY}/ibr-spain/ui:${UI_VERSION}
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        envFrom:
        - configMapRef:
            name: ibr-ui-config
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 300m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ibr-ui
  namespace: ibr-spain
  labels:
    app: ibr-ui
    component: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: ibr-ui
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ibr-ui-ingress
  namespace: ibr-spain
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
spec:
  tls:
  - hosts:
    - ibr-espana.org
    - www.ibr-espana.org
    secretName: ibr-espana-tls
  rules:
  - host: ibr-espana.org
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ibr-ui
            port:
              number: 80
  - host: www.ibr-espana.org
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ibr-ui
            port:
              number: 80 