apiVersion: v1
kind: ConfigMap
metadata:
  name: ibr-api-config
  namespace: ibr-spain
data:
  NODE_ENV: "production"
  PORT: "3000"
  LOG_LEVEL: "info"
  CORS_ORIGIN: "https://ibr-espana.org,https://www.ibr-espana.org"
  SERMON_SERVICE_URL: "http://sermon-service:3001"
  EVENT_SERVICE_URL: "http://event-service:3002"
  DEVOTIONAL_SERVICE_URL: "http://devotional-service:3003"
  PRAYER_SERVICE_URL: "http://prayer-service:3004"
  NOTIFICATION_SERVICE_URL: "http://notification-service:3005"
---
apiVersion: v1
kind: Secret
metadata:
  name: ibr-api-secrets
  namespace: ibr-spain
type: Opaque
data:
  JWT_SECRET: "${JWT_SECRET_BASE64}"
  ADMIN_API_KEY: "${ADMIN_API_KEY_BASE64}"
  SMTP_PASSWORD: "${SMTP_PASSWORD_BASE64}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ibr-api
  namespace: ibr-spain
  labels:
    app: ibr-api
    component: gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ibr-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: ibr-api
        component: gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: ibr-api
        image: ${DOCKER_REGISTRY}/ibr-spain/api:${API_VERSION}
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        envFrom:
        - configMapRef:
            name: ibr-api-config
        - secretRef:
            name: ibr-api-secrets
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3000
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ibr-api
  namespace: ibr-spain
  labels:
    app: ibr-api
    component: gateway
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: ibr-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ibr-api-ingress
  namespace: ibr-spain
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://ibr-espana.org,https://www.ibr-espana.org"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
spec:
  tls:
  - hosts:
    - api.ibr-espana.org
    secretName: ibr-api-tls
  rules:
  - host: api.ibr-espana.org
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ibr-api
            port:
              number: 80 