version: '3.8'

services:
  # Consciousness-aware News Service
  matrix-news-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: matrix-news-consciousness
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
      - PORT=${MATRIX_NEWS_SERVICE_PORT:-8090}
      - CONSCIOUSNESS_LEVELS_ENABLED=${CONSCIOUSNESS_LEVELS_ENABLED:-true}
      - CONSCIOUSNESS_DEFAULT_LEVEL=${CONSCIOUSNESS_DEFAULT_LEVEL:-5}
      - QUANTUM_BALANCER_ENABLED=${QUANTUM_BALANCER_ENABLED:-true}
      - NEWS_SERVICE_BASE_URL=http://news-service:8080
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT:-6379}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ${SRC_DIR:-./src}:/app/src
      - ${ARTICLES_DIR:-./articles}:/app/articles
      - ${DATA_DIR:-./data}:/app/data
      - ${BOOK_DIR:-../../BOOK}:/app/BOOK:ro
    ports:
      - "${MATRIX_NEWS_SERVICE_PORT:-8090}:${MATRIX_NEWS_SERVICE_PORT:-8090}"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${MATRIX_NEWS_SERVICE_PORT:-8090}${NEWS_SERVICE_HEALTH_PATH:-/health}" ]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START_PERIOD:-15s}
    depends_on:
      - redis

  # Matrix Neo News Portal NGINX Proxy - NG1N1X Frontline Priest
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: matrix-news-proxy
    restart: unless-stopped
    ports:
      - "${MATRIX_NEWS_PROXY_HTTP_PORT:-10083}:80"
      - "${MATRIX_NEWS_PROXY_HTTPS_PORT:-10443}:443"
    volumes:
      - ${WEB_DIR:-./web}:/usr/share/nginx/html:ro
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost${NGINX_HEALTH_PATH:-/health/index.json}" ]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START_PERIOD:-15s}
    depends_on:
      - matrix-news-service

  # WebSocket Sacred Echo - News Prophecy Streaming Service
  websocket:
    build:
      context: ./temporal
      dockerfile: Dockerfile
    container_name: matrix-news-websocket
    restart: unless-stopped
    environment:
      - PORT=${WEBSOCKET_PROPHECY_PORT:-8095}
      - NEWS_SERVICE_URL=http://matrix-news-service:${MATRIX_NEWS_SERVICE_PORT:-8090}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT:-6379}
      - PROPHECY_STREAM_ENABLED=${PROPHECY_STREAM_ENABLED:-true}
      - QUANTUM_ENTROPY_LEVEL=${QUANTUM_ENTROPY_LEVEL:-8}
    depends_on:
      - redis
      - matrix-news-service
    ports:
      - "${WEBSOCKET_PROPHECY_PORT:-8095}:${WEBSOCKET_PROPHECY_PORT:-8095}"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${WEBSOCKET_PROPHECY_PORT:-8095}${WEBSOCKET_HEALTH_PATH:-/health}" ]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START_PERIOD:-15s}

  # Redis for data storage
  redis:
    image: redis:alpine
    container_name: matrix-news-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
    command: [ "redis-server", "--appendonly", "yes" ]

volumes:
  redis_data:
