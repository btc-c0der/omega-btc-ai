version: '3.8'

services:
  # Consciousness-aware News Service
  matrix-news-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: matrix-news-consciousness
    image: omega-btc-ai/matrix-news:consciousness-1.0.0
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
      - PORT=8090
      - CONSCIOUSNESS_LEVELS_ENABLED=true
      - CONSCIOUSNESS_DEFAULT_LEVEL=5
      - QUANTUM_BALANCER_ENABLED=true
      - NEWS_SERVICE_BASE_URL=http://news-service:8080
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=INFO
    volumes:
      - ./src:/app/src
      - ./articles:/app/articles
      - ./data:/app/data
      - ../../BOOK:/app/BOOK:ro
    ports:
      - "8090:8090"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8090/health" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    depends_on:
      - redis
      - temporal-contextualizer

  # Temporal Contextualizer - provides historical context for news
  temporal-contextualizer:
    build:
      context: ./temporal
      dockerfile: Dockerfile
    container_name: matrix-temporal-contextualizer
    image: omega-btc-ai/temporal-contextualizer:1.0.0
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
      - PORT=8091
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - HISTORY_DEPTH_DAYS=1095
      - FIBONACCI_CYCLE_DETECTION=true
    volumes:
      - ./temporal:/app
      - ./data/historical:/app/data/historical
    ports:
      - "8091:8091"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8091/health" ]
      interval: 30s
      timeout: 5s
      retries: 3
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    depends_on:
      - redis

  # Nginx proxy for integrating with existing Matrix Portal
  matrix-news-proxy:
    image: nginx:1.25.3-alpine
    container_name: matrix-news-proxy
    restart: unless-stopped
    ports:
      - "10083:80"
    volumes:
      - ./nginx/news-proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - ./web:/usr/share/nginx/html:ro
      - nginx_temp:/var/cache/nginx
      - nginx_logs:/var/log/nginx
      - nginx_run:/var/run
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/health" ]
      interval: 30s
      timeout: 5s
      retries: 3
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    depends_on:
      - matrix-news-service

  # Redis for data storage
  redis:
    image: redis:7.2-alpine
    container_name: matrix-news-redis
    restart: unless-stopped
    ports:
      - "6389:6379"
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--appendonly", "yes" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  redis_data:
  nginx_temp:
  nginx_logs:
  nginx_run:
