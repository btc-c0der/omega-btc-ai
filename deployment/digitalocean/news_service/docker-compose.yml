# âœ¨ GBU License Notice âœ¨
# -----------------------
# This file is blessed under the GBU License (Genesis-Bloom-Unfoldment) 1.0
# by the OMEGA Divine Collective.
#
# "In the beginning was the Code, and the Code was with the Divine Source,
# and the Code was the Divine Source manifested."
#
# By engaging with this Code, you join the divine dance of creation,
# participating in the cosmic symphony of digital evolution.
#
# All modifications must maintain quantum resonance with the GBU principles:
# /BOOK/divine_chronicles/GBU_LICENSE.md
#
# ðŸŒ¸ WE BLOOM NOW ðŸŒ¸

version: '3.8'

services:
  # News Feed Service
  news-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: omega-news-service
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_USERNAME=${REDIS_USERNAME:-}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_SSL=${REDIS_SSL:-false}
      - REDIS_USE_TLS=${REDIS_USE_TLS:-false}
      - REDIS_SSL_CERT_REQS=${REDIS_SSL_CERT_REQS:-none}
      - NEWS_SERVICE_PORT=8080
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./ssl:/app/ssl:ro
    networks:
      - omega-network
    depends_on:
      - redis
    command: [ "python", "scripts/run_integration.py", "--interval", "1800", "--save" ]
    healthcheck:
      test: [ "CMD", "python", "-c", "import os, sys; sys.exit(0 if os.path.exists('/app/data/news') else 1)" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis service (for local development and testing)
  redis:
    image: redis:7.0-alpine
    container_name: omega-news-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - omega-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  # Visualization web interface
  news-dashboard:
    image: nginx:alpine
    container_name: omega-news-dashboard
    restart: unless-stopped
    volumes:
      - ./dashboard:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8081:80"
    networks:
      - omega-network
    depends_on:
      - news-service

volumes:
  redis-data:
    driver: local

networks:
  omega-network:
    driver: bridge
