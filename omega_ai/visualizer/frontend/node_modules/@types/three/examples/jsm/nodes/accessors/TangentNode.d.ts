/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import Node from "../core/Node.js";
import MathNode from "../math/MathNode.js";
import { ShaderNodeObject } from "../shadernode/ShaderNode.js";

export type TangentNodeScope =
    | typeof TangentNode.LOCAL
    | typeof TangentNode.VIEW
    | typeof TangentNode.WORLD
    | typeof TangentNode.GEOMETRY;

export default class TangentNode extends Node {
    static GEOMETRY: "geometry";
    static LOCAL: "local";
    static VIEW: "view";
    static WORLD: "world";

    scope: TangentNodeScope;

    constructor(scope?: TangentNodeScope);
}

export const tangentGeometry: ShaderNodeObject<TangentNode>;
export const tangentLocal: ShaderNodeObject<TangentNode>;
export const tangentView: ShaderNodeObject<TangentNode>;
export const tangentWorld: ShaderNodeObject<TangentNode>;
export const transformedTangentView: ShaderNodeObject<MathNode>;
export const transformedTangentWorld: ShaderNodeObject<MathNode>;
