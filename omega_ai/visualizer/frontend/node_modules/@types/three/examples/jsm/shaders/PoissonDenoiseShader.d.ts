/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import { IUniform, Matrix4, Vector2 } from "../../../src/Three.js";

export const PoissonDenoiseShader: {
    name: string;
    defines: {
        SAMPLES: number;
        SAMPLE_VECTORS: string;
        NORMAL_VECTOR_TYPE: number;
        DEPTH_VALUE_SOURCE: number;
    };
    uniforms: {
        tDiffuse: IUniform;
        tNormal: IUniform;
        tDepth: IUniform;
        tNoise: IUniform;
        resolution: IUniform<Vector2>;
        cameraProjectionMatrixInverse: IUniform<Matrix4>;
        lumaPhi: IUniform<number>;
        depthPhi: IUniform<number>;
        normalPhi: IUniform<number>;
        radius: IUniform<number>;
        index: IUniform<number>;
    };
    vertexShader: string;
    fragmentShader: string;
};

export function generatePdSamplePointInitializer(samples: number, rings: number, radiusExponent: number): string;
