/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import Node from "./Node.js";
import NodeBuilder from "./NodeBuilder.js";
import StackNode from "./StackNode.js";

export interface LightingModelReflectedLight {
    directDiffuse: Node;
    directSpecular: Node;
    indirectDiffuse: Node;
    indirectSpecular: Node;
}

export interface LightingModelDirectInput {
    lightDirection: Node;
    lightColor: Node;
    reflectedLight: LightingModelReflectedLight;
}

export interface LightingModelIndirectInput {
    radiance: Node;
    irradiance: Node;
    iblIrradiance: Node;
    ambientOcclusion: Node;
    reflectedLight: LightingModelReflectedLight;
    backdrop: Node;
    backdropAlpha: Node;
    outgoingLight: Node;
}

export default class LightingModel {
    start(input: LightingModelIndirectInput, stack: StackNode, builder: NodeBuilder): void;
    finish(input: LightingModelIndirectInput, stack: StackNode, builder: NodeBuilder): void;
    direct(input: LightingModelDirectInput, stack: StackNode, builder: NodeBuilder): void;
    indirectDiffuse(input: LightingModelIndirectInput, stack: StackNode, builder: NodeBuilder): void;
    indirectSpecular(input: LightingModelIndirectInput, stack: StackNode, builder: NodeBuilder): void;
    ambientOcclusion(input: LightingModelIndirectInput, stack: StackNode, builder: NodeBuilder): void;
}
