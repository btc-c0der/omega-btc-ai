/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import { Curve, Vector3 } from "../../../src/Three.js";

import { ParametricGeometry } from "./ParametricGeometry.js";

export namespace ParametricGeometries {
    function klein(v: number, u: number, target: Vector3): Vector3;
    function plane(width: number, height: number): (u: number, v: number, target: Vector3) => Vector3;
    function mobius(u: number, t: number, target: Vector3): Vector3;
    function mobius3d(u: number, t: number, target: Vector3): Vector3;

    class TubeGeometry extends ParametricGeometry {
        constructor(
            path: Curve<Vector3>,
            segments?: number,
            radius?: number,
            segmentsRadius?: number,
            closed?: boolean,
        );
    }

    class TorusKnotGeometry extends TubeGeometry {
        constructor(radius?: number, tube?: number, segmentsT?: number, segmentsR?: number, p?: number, q?: number);
    }

    class SphereGeometry extends ParametricGeometry {
        constructor(size: number, u: number, v: number);
    }

    class PlaneGeometry extends ParametricGeometry {
        constructor(width: number, depth: number, segmentsWidth: number, segmentsDepth: number);
    }
}
