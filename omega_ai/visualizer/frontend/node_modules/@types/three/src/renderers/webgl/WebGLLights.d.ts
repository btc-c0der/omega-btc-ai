/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import { WebGLCapabilities } from "./WebGLCapabilities.js";
import { WebGLExtensions } from "./WebGLExtensions.js";

export interface WebGLLightsState {
    version: number;

    hash: {
        directionalLength: number;
        pointLength: number;
        spotLength: number;
        rectAreaLength: number;
        hemiLength: number;

        numDirectionalShadows: number;
        numPointShadows: number;
        numSpotShadows: number;
        numSpotMaps: number;

        numLightProbes: number;
    };

    ambient: number[];
    probe: any[];
    directional: any[];
    directionalShadow: any[];
    directionalShadowMap: any[];
    directionalShadowMatrix: any[];
    spot: any[];
    spotShadow: any[];
    spotShadowMap: any[];
    spotShadowMatrix: any[];
    rectArea: any[];
    point: any[];
    pointShadow: any[];
    pointShadowMap: any[];
    pointShadowMatrix: any[];
    hemi: any[];
    numSpotLightShadowsWithMaps: number;
    numLightProbes: number;
}

export class WebGLLights {
    constructor(extensions: WebGLExtensions, capabilities: WebGLCapabilities);

    state: WebGLLightsState;

    get(light: any): any;
    setup(lights: any): void;
    setupView(lights: any, camera: any): void;
}
