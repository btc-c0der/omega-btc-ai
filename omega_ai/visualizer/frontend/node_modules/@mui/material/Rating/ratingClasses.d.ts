/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

export interface RatingClasses {
    /** Styles applied to the root element. */
    root: string;
    /** Styles applied to the root element if `size="small"`. */
    sizeSmall: string;
    /** Styles applied to the root element if `size="medium"`. */
    sizeMedium: string;
    /** Styles applied to the root element if `size="large"`. */
    sizeLarge: string;
    /** Styles applied to the root element if `readOnly={true}`. */
    readOnly: string;
    /** State class applied to the root element if `disabled={true}`. */
    disabled: string;
    /** State class applied to the root element if keyboard focused. */
    focusVisible: string;
    /** Visually hide an element. */
    visuallyHidden: string;
    /** Styles applied to the label elements. */
    label: string;
    /** Styles applied to the label of the "no value" input when it is active. */
    labelEmptyValueActive: string;
    /** Styles applied to the icon wrapping elements. */
    icon: string;
    /** Styles applied to the icon wrapping elements when empty. */
    iconEmpty: string;
    /** Styles applied to the icon wrapping elements when filled. */
    iconFilled: string;
    /** Styles applied to the icon wrapping elements when hover. */
    iconHover: string;
    /** Styles applied to the icon wrapping elements when focus. */
    iconFocus: string;
    /** Styles applied to the icon wrapping elements when active. */
    iconActive: string;
    /** Styles applied to the icon wrapping elements when decimals are necessary. */
    decimal: string;
}
export type RatingClassKey = keyof RatingClasses;
export declare function getRatingUtilityClass(slot: string): string;
declare const ratingClasses: RatingClasses;
export default ratingClasses;
