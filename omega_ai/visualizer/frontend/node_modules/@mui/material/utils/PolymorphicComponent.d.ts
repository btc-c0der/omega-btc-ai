/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import * as React from 'react';
import { DistributiveOmit, OverridableTypeMap } from '@mui/types';
/**
 * A component whose root component can be controlled explicitly with a generic type parameter.
 * Adjusts valid props based on the type of `RootComponent`.
 *
 * @template TypeMap The interface the defines the props and a default root element of the component.
 */
export type PolymorphicComponent<TypeMap extends OverridableTypeMap> = {
    <RootComponent extends React.ElementType = TypeMap['defaultComponent']>(props: PolymorphicProps<TypeMap, RootComponent>): React.JSX.Element | null;
    propTypes?: any;
    displayName?: string | undefined;
};
/**
 * Own props of the component augmented with props of the root component.
 */
export type PolymorphicProps<TypeMap extends OverridableTypeMap, RootComponent extends React.ElementType> = TypeMap['props'] & DistributiveOmit<React.ComponentPropsWithRef<RootComponent>, keyof TypeMap['props']>;
