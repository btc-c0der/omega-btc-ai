/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import { PerspectiveCamera, ShaderMaterial, Scene, WebGLRenderer, OrthographicCamera, WebGLRenderTarget } from 'three'

import { BokehShader2Uniforms } from './../shaders/BokehShader2'

export class CinematicCamera extends PerspectiveCamera {
  constructor(fov: number, aspect: number, near: number, far: number)

  postprocessing: {
    enabled: boolean
    scene: Scene
    camera: OrthographicCamera
    rtTextureDepth: WebGLRenderTarget
    rtTextureColor: WebGLRenderTarget
    bokeh_uniforms: BokehShader2Uniforms
  }
  shaderSettings: {
    rings: number
    samples: number
  }
  materialDepth: ShaderMaterial
  coc: number
  aperture: number
  fNumber: number
  hyperFocal: number
  filmGauge: number

  linearize(depth: number): number
  smoothstep(near: number, far: number, depth: number): number
  saturate(x: number): number
  focusAt(focusDistance: number): void
  initPostProcessing(): void
  renderCinematic(scene: Scene, renderer: WebGLRenderer): void
  setLens(focalLength: number, frameHeight?: number, fNumber?: number, coc?: number): void
}
