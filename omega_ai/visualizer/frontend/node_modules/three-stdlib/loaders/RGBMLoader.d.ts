/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import { CubeTexture, LoadingManager, DataTextureLoader, PixelFormat, TextureDataType } from 'three'

export interface RGBM {
  width: number
  height: number
  data: Uint16Array | Float32Array
  header: string
  format: PixelFormat
  type: TextureDataType
  flipY: boolean
}

export class RGBMLoader extends DataTextureLoader {
  type: TextureDataType

  maxRange: number

  constructor(manager?: LoadingManager)

  loadCubemap(
    urls: string[],
    onLoad?: (texture: CubeTexture) => void,
    onProgress?: (event: ProgressEvent) => void,
    onError?: (event: ErrorEvent) => void,
  ): CubeTexture

  parse(buffer: ArrayBuffer): RGBM

  setDataType(dataType: TextureDataType): this

  setMaxRange(value: number): this
}
