/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import { Curve, Vector3 } from 'three'

export class GrannyKnot extends Curve<Vector3> {
  constructor()
}

export class HeartCurve extends Curve<Vector3> {
  constructor(scale?: number)
  scale: number
}

export class VivianiCurve extends Curve<Vector3> {
  constructor(scale?: number)
  scale: number
}

export class KnotCurve extends Curve<Vector3> {
  constructor()
}

export class HelixCurve extends Curve<Vector3> {
  constructor()
}

export class TrefoilKnot extends Curve<Vector3> {
  constructor(scale?: number)
  scale: number
}

export class TorusKnot extends Curve<Vector3> {
  constructor(scale?: number)
  scale: number
}

export class CinquefoilKnot extends Curve<Vector3> {
  constructor(scale?: number)
  scale: number
}

export class TrefoilPolynomialKnot extends Curve<Vector3> {
  constructor(scale?: number)
  scale: number
}

export class FigureEightPolynomialKnot extends Curve<Vector3> {
  constructor(scale?: number)
  scale: number
}

export class DecoratedTorusKnot4a extends Curve<Vector3> {
  constructor(scale?: number)
  scale: number
}

export class DecoratedTorusKnot4b extends Curve<Vector3> {
  constructor(scale?: number)
  scale: number
}

export class DecoratedTorusKnot5a extends Curve<Vector3> {
  constructor(scale?: number)
  scale: number
}

export class DecoratedTorusKnot5c extends Curve<Vector3> {
  constructor(scale?: number)
  scale: number
}
