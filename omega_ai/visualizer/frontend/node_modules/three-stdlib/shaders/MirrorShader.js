/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

const MirrorShader = {
  uniforms: {
    tDiffuse: { value: null },
    side: { value: 1 }
  },
  vertexShader: (
    /* glsl */
    `
    varying vec2 vUv;

    void main() {

    	vUv = uv;
    	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

    }
  `
  ),
  fragmentShader: (
    /* glsl */
    `
    uniform sampler2D tDiffuse;
    uniform int side;

    varying vec2 vUv;

    void main() {

    	vec2 p = vUv;
    	if (side == 0){
    		if (p.x > 0.5) p.x = 1.0 - p.x;
    	}else if (side == 1){
    		if (p.x < 0.5) p.x = 1.0 - p.x;
    	}else if (side == 2){
    		if (p.y < 0.5) p.y = 1.0 - p.y;
    	}else if (side == 3){
    		if (p.y > 0.5) p.y = 1.0 - p.y;
    	} 
    	vec4 color = texture2D(tDiffuse, p);
    	gl_FragColor = color;

    }
  `
  )
};
export {
  MirrorShader
};
//# sourceMappingURL=MirrorShader.js.map
