/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

const RGBShiftShader = {
  uniforms: {
    tDiffuse: { value: null },
    amount: { value: 5e-3 },
    angle: { value: 0 }
  },
  vertexShader: (
    /* glsl */
    `
    varying vec2 vUv;

    void main() {

    	vUv = uv;
    	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

    }
  `
  ),
  fragmentShader: (
    /* glsl */
    `
    uniform sampler2D tDiffuse;
    uniform float amount;
    uniform float angle;

    varying vec2 vUv;

    void main() {

    	vec2 offset = amount * vec2( cos(angle), sin(angle));
    	vec4 cr = texture2D(tDiffuse, vUv + offset);
    	vec4 cga = texture2D(tDiffuse, vUv);
    	vec4 cb = texture2D(tDiffuse, vUv - offset);
    	gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);

    }
  `
  )
};
export {
  RGBShiftShader
};
//# sourceMappingURL=RGBShiftShader.js.map
