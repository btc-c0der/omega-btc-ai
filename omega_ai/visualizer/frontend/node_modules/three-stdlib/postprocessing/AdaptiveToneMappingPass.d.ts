/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import { WebGLRenderTarget, ShaderMaterial } from 'three'

import { Pass, FullScreenQuad } from './Pass'

export class AdaptiveToneMappingPass extends Pass {
  constructor(adaptive?: boolean, resolution?: number)
  adaptive: boolean
  resolution: number
  needsInit: number
  luminanceRT: WebGLRenderTarget
  previousLuminanceRT: WebGLRenderTarget
  currentLuminanceRT: WebGLRenderTarget
  copyUniforms: object
  materialCopy: ShaderMaterial
  materialLuminance: ShaderMaterial
  adaptLuminanceShader: object
  materialAdaptiveLum: ShaderMaterial
  materialToneMap: ShaderMaterial
  fsQuad: FullScreenQuad

  reset(): void
  setAdaptive(adaptive: boolean): void
  setAdaptionRate(rate: number): void
  setMinLuminance(minLum: number): void
  setMaxLuminance(maxLum: number): void
  setAverageLuminance(avgLum: number): void
  setMiddleGrey(middleGrey: number): void
  dispose(): void
}
