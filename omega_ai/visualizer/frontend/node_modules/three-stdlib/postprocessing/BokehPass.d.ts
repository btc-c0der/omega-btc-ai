/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

/**
 * Depth-of-field post-process with bokeh shader
 */
import { Pass, FullScreenQuad } from './Pass';
import { MeshDepthMaterial, PerspectiveCamera, Scene, ShaderMaterial, WebGLRenderer, WebGLRenderTarget } from 'three';
type BokehPassParams = {
    focus?: number;
    aspect?: number;
    aperture?: number;
    maxblur?: number;
    width?: number;
    height?: number;
};
declare class BokehPass extends Pass {
    scene: Scene;
    camera: PerspectiveCamera;
    renderTargetDepth: WebGLRenderTarget;
    materialDepth: MeshDepthMaterial;
    materialBokeh: ShaderMaterial;
    fsQuad: FullScreenQuad;
    private _oldClearColor;
    uniforms: any;
    constructor(scene: Scene, camera: PerspectiveCamera, params: BokehPassParams);
    render(renderer: WebGLRenderer, writeBuffer: WebGLRenderTarget, readBuffer: WebGLRenderTarget): void;
}
export { BokehPass };
