/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import {
  WebGLRenderer,
  WebGLRenderTarget,
  Texture,
  DataTexture,
  Material,
  ShaderMaterial,
  Wrapping,
  TextureFilter,
  TextureDataType,
  IUniform,
} from 'three'

export interface Variable {
  name: string
  initialValueTexture: Texture
  material: ShaderMaterial
  dependencies: Variable[]
  renderTargets: WebGLRenderTarget[]
  wrapS: number
  wrapT: number
  minFilter: number
  magFilter: number
}

export class GPUComputationRenderer {
  constructor(sizeX: number, sizeY: number, renderer: WebGLRenderer)

  setDataType(type: TextureDataType): void

  addVariable(variableName: string, computeFragmentShader: string, initialValueTexture: Texture): Variable
  setVariableDependencies(variable: Variable, dependencies: Variable[] | null): void

  init(): string | null
  compute(): void

  getCurrentRenderTarget(variable: Variable): WebGLRenderTarget
  getAlternateRenderTarget(variable: Variable): WebGLRenderTarget
  addResolutionDefine(materialShader: ShaderMaterial): void
  createShaderMaterial(computeFragmentShader: string, uniforms?: { [uniform: string]: IUniform }): ShaderMaterial
  createRenderTarget(
    sizeXTexture: number,
    sizeYTexture: number,
    wrapS: Wrapping,
    wrapT: number,
    minFilter: TextureFilter,
    magFilter: TextureFilter,
  ): WebGLRenderTarget
  createTexture(): DataTexture
  renderTexture(input: Texture, output: Texture): void
  doRenderTarget(material: Material, output: WebGLRenderTarget): void
  dispose(): void
}
