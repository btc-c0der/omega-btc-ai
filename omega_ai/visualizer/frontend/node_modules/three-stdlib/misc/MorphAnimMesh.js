/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import { Mesh, AnimationMixer, AnimationClip } from "three";
class MorphAnimMesh extends Mesh {
  constructor(geometry, material) {
    super(geometry, material);
    this.type = "MorphAnimMesh";
    this.mixer = new AnimationMixer(this);
    this.activeAction = null;
  }
  setDirectionForward() {
    this.mixer.timeScale = 1;
  }
  setDirectionBackward() {
    this.mixer.timeScale = -1;
  }
  playAnimation(label, fps) {
    if (this.activeAction) {
      this.activeAction.stop();
      this.activeAction = null;
    }
    const clip = AnimationClip.findByName(this, label);
    if (clip) {
      const action = this.mixer.clipAction(clip);
      action.timeScale = clip.tracks.length * fps / clip.duration;
      this.activeAction = action.play();
    } else {
      throw new Error("THREE.MorphAnimMesh: animations[" + label + "] undefined in .playAnimation()");
    }
  }
  updateAnimation(delta) {
    this.mixer.update(delta);
  }
  copy(source, recursive) {
    super.copy(source, recursive);
    this.mixer = new AnimationMixer(this);
    return this;
  }
}
export {
  MorphAnimMesh
};
//# sourceMappingURL=MorphAnimMesh.js.map
