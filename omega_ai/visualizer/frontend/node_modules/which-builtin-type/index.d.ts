/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import whichBoxedPrimitive from 'which-boxed-primitive';
import whichCollection from 'which-collection';
import whichTypedArray from 'which-typed-array';

type AsyncFunction<T = unknown> = (...args: unknown[]) => Promise<T>;

declare function whichBuiltinType<T>(value: Parameters<typeof whichCollection>[0]): ReturnType<typeof whichCollection>;
declare function whichBuiltinType<T>(value: Parameters<typeof whichTypedArray>[0]): ReturnType<typeof whichTypedArray>;
declare function whichBuiltinType<T>(value: ReadonlyArray<T>): 'Array';
declare function whichBuiltinType<T>(value: Date): 'Date';
declare function whichBuiltinType<T>(value: RegExp): 'RegExp';
declare function whichBuiltinType<T>(value: T extends object ? WeakRef<T> : never): 'WeakRef';
declare function whichBuiltinType<T>(value: FinalizationRegistry<T>): 'FinalizationRegistry';
declare function whichBuiltinType<T>(value: GeneratorFunction): 'GeneratorFunction';
declare function whichBuiltinType<T>(value: AsyncFunction<T>): 'AsyncFunction';
declare function whichBuiltinType<T>(value: Function): 'Function';
declare function whichBuiltinType<T>(value: Promise<T>): 'Promise';

declare function whichBuiltinType<T>(value: T): 'Object' | Exclude<ReturnType<typeof whichBoxedPrimitive>, null | undefined> | string;

export = whichBuiltinType;
