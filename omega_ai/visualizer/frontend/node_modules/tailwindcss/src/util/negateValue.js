/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

export default function negateValue(value) {
  value = `${value}`

  if (value === '0') {
    return '0'
  }

  // Flip sign of numbers
  if (/^[+-]?(\d+|\d*\.\d+)(e[+-]?\d+)?(%|\w+)?$/.test(value)) {
    return value.replace(/^[+-]?/, (sign) => (sign === '-' ? '' : '-'))
  }

  // What functions we support negating numeric values for
  // var() isn't inherently a numeric function but we support it anyway
  // The trigonometric functions are omitted because you'll need to use calc(â€¦) with them _anyway_
  // to produce generally useful results and that will be covered already
  let numericFunctions = ['var', 'calc', 'min', 'max', 'clamp']

  for (const fn of numericFunctions) {
    if (value.includes(`${fn}(`)) {
      return `calc(${value} * -1)`
    }
  }
}
