/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

'use strict';

var GetIntrinsic = require('get-intrinsic');

var $ArrayBuffer = GetIntrinsic('%ArrayBuffer%');
var $DataView = GetIntrinsic('%DataView%', true);

var callBound = require('call-bound');

// node <= 0.10, < 0.11.4 has a nonconfigurable own property instead of a prototype getter
var $dataViewBuffer = callBound('DataView.prototype.buffer', true);

var isTypedArray = require('is-typed-array');

/** @type {import('.')} */
module.exports = function isDataView(x) {
	if (!x || typeof x !== 'object' || !$DataView || isTypedArray(x)) {
		return false;
	}

	if ($dataViewBuffer) {
		try {
			$dataViewBuffer(x);
			return true;
		} catch (e) {
			return false;
		}
	}

	if (
		('getInt8' in x)
			&& typeof x.getInt8 === 'function'
			&& x.getInt8 === new $DataView(new $ArrayBuffer(1)).getInt8
	) {
		return true;
	}

	return false;
};
