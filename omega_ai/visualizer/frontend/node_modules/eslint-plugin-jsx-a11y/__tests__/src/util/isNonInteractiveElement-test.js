/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import test from 'tape';
import { elementType } from 'jsx-ast-utils';

import isNonInteractiveElement from '../../../src/util/isNonInteractiveElement';
import {
  genElementSymbol,
  genIndeterminantInteractiveElements,
  genInteractiveElements,
  genInteractiveRoleElements,
  genNonInteractiveElements,
  genNonInteractiveRoleElements,
} from '../../../__mocks__/genInteractives';

test('isNonInteractiveElement', (t) => {
  t.equal(
    isNonInteractiveElement(undefined, []),
    false,
    'identifies JSX Components (no tagName) as non-interactive elements',
  );

  t.test('non-interactive elements', (st) => {
    genNonInteractiveElements().forEach(({ openingElement }) => {
      st.equal(
        isNonInteractiveElement(
          elementType(openingElement),
          openingElement.attributes,
        ),
        true,
        `identifies \`${genElementSymbol(openingElement)}\` as a non-interactive element`,
      );
    });

    st.end();
  });

  t.test('non-interactive role elements', (st) => {
    genNonInteractiveRoleElements().forEach(({ openingElement }) => {
      st.equal(
        isNonInteractiveElement(
          elementType(openingElement),
          openingElement.attributes,
        ),
        false,
        `identifies \`${genElementSymbol(openingElement)}\` as a non-interactive element`,
      );
    });

    st.end();
  });

  t.test('interactive elements', (st) => {
    genInteractiveElements().forEach(({ openingElement }) => {
      st.equal(
        isNonInteractiveElement(
          elementType(openingElement),
          openingElement.attributes,
        ),
        false,
        `identifies \`${genElementSymbol(openingElement)}\` as a non-interactive element`,
      );
    });

    st.end();
  });

  t.test('interactive role elements', (st) => {
    genInteractiveRoleElements().forEach(({ openingElement }) => {
      st.equal(
        isNonInteractiveElement(
          elementType(openingElement),
          openingElement.attributes,
        ),
        false,
        `identifies \`${genElementSymbol(openingElement)}\` as a non-interactive element`,
      );
    });

    st.end();
  });

  t.test('indeterminate elements', (st) => {
    genIndeterminantInteractiveElements().forEach(({ openingElement }) => {
      st.equal(
        isNonInteractiveElement(
          elementType(openingElement),
          openingElement.attributes,
        ),
        false,
        `identifies \`${genElementSymbol(openingElement)}\` as a non-interactive element`,
      );
    });

    st.end();
  });

  t.end();
});
