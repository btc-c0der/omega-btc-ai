/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

export { MeshBVH } from './core/MeshBVH.js';
export { MeshBVHHelper } from './objects/MeshBVHHelper.js';
export { CENTER, AVERAGE, SAH, NOT_INTERSECTED, INTERSECTED, CONTAINED } from './core/Constants.js';
export { getBVHExtremes, estimateMemoryInBytes, getJSONStructure, validateBounds } from './debug/Debug.js';
export * from './utils/ExtensionUtilities.js';
export { getTriangleHitPointInfo } from './utils/TriangleUtilities.js';
export * from './math/ExtendedTriangle.js';
export * from './math/OrientedBox.js';
export * from './gpu/MeshBVHUniformStruct.js';
export * from './gpu/VertexAttributeTexture.js';
export * from './utils/StaticGeometryGenerator.js';
export * as BVHShaderGLSL from './gpu/BVHShaderGLSL.js';

// backwards compatibility
import * as BVHShaderGLSL from './gpu/BVHShaderGLSL.js';
export const shaderStructs = BVHShaderGLSL.bvh_struct_definitions;
export const shaderDistanceFunction = BVHShaderGLSL.bvh_distance_functions;
export const shaderIntersectFunction = `
	${ BVHShaderGLSL.common_functions }
	${ BVHShaderGLSL.bvh_ray_functions }
`;
