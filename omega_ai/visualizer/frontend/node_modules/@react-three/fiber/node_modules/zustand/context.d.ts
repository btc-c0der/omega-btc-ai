/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import { ReactNode } from 'react';
import { EqualityChecker, State, StateSelector, UseBoundStore } from 'zustand';
/**
 * @deprecated Use `typeof MyContext.useStore` instead.
 */
export declare type UseContextStore<T extends State> = {
    (): T;
    <U>(selector: StateSelector<T, U>, equalityFn?: EqualityChecker<U>): U;
};
declare function createContext<TState extends State, TUseBoundStore extends UseBoundStore<TState> = UseBoundStore<TState>>(): {
    Provider: ({ initialStore, createStore, children, }: {
        /**
         * @deprecated
         */
        initialStore?: TUseBoundStore;
        createStore: () => TUseBoundStore;
        children: ReactNode;
    }) => import("react").FunctionComponentElement<import("react").ProviderProps<TUseBoundStore | undefined>>;
    useStore: UseContextStore<TState>;
    useStoreApi: () => {
        getState: TUseBoundStore['getState'];
        setState: TUseBoundStore['setState'];
        subscribe: TUseBoundStore['subscribe'];
        destroy: TUseBoundStore['destroy'];
    };
};
export default createContext;
