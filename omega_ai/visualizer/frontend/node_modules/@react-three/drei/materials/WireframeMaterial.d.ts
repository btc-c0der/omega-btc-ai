/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import * as THREE from 'three';
export interface WireframeMaterialProps extends THREE.ShaderMaterialParameters {
    fillOpacity?: number;
    fillMix?: number;
    strokeOpacity?: number;
    thickness?: number;
    colorBackfaces?: boolean;
    dashInvert?: boolean;
    dash?: boolean;
    dashRepeats?: number;
    dashLength?: number;
    squeeze?: boolean;
    squeezeMin?: number;
    squeezeMax?: number;
    stroke?: THREE.ColorRepresentation;
    backfaceStroke?: THREE.ColorRepresentation;
    fill?: THREE.ColorRepresentation;
}
export declare const WireframeMaterialShaders: {
    uniforms: {
        strokeOpacity: number;
        fillOpacity: number;
        fillMix: number;
        thickness: number;
        colorBackfaces: boolean;
        dashInvert: boolean;
        dash: boolean;
        dashRepeats: number;
        dashLength: number;
        squeeze: boolean;
        squeezeMin: number;
        squeezeMax: number;
        stroke: THREE.Color;
        backfaceStroke: THREE.Color;
        fill: THREE.Color;
    };
    vertex: string;
    fragment: string;
};
export declare const WireframeMaterial: typeof THREE.ShaderMaterial & {
    key: string;
};
export declare function setWireframeOverride(material: THREE.Material, uniforms: {
    [key: string]: THREE.IUniform<any>;
}): void;
export declare function useWireframeUniforms(uniforms: {
    [key: string]: THREE.IUniform<any>;
}, props: WireframeMaterialProps): void;
