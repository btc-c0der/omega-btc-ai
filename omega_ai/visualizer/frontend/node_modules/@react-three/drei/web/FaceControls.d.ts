/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import * as THREE from 'three';
import * as React from 'react';
import { RefObject } from 'react';
import type { FaceLandmarkerResult } from '@mediapipe/tasks-vision';
import { VideoTextureProps } from '../core/VideoTexture';
import { FacemeshApi, FacemeshProps } from './Facemesh';
export type FaceControlsProps = {
    camera?: THREE.Camera;
    videoTexture?: VideoTextureProps;
    manualDetect?: boolean;
    faceLandmarkerResult?: FaceLandmarkerResult;
    manualUpdate?: boolean;
    makeDefault?: boolean;
    smoothTime?: number;
    offset?: boolean;
    offsetScalar?: number;
    eyes?: boolean;
    eyesAsOrigin?: boolean;
    depth?: number;
    debug?: boolean;
    facemesh?: FacemeshProps;
};
export type FaceControlsApi = THREE.EventDispatcher & {
    computeTarget: () => THREE.Object3D;
    update: (delta: number, target?: THREE.Object3D) => void;
    facemeshApiRef: RefObject<FacemeshApi>;
};
export declare const FaceControls: React.ForwardRefExoticComponent<FaceControlsProps & React.RefAttributes<FaceControlsApi>>;
export declare const useFaceControls: () => FaceControlsApi;
