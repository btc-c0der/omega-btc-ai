/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import * as THREE from 'three';
import { ForwardRefComponent } from '../helpers/ts-utils';
type MeshTransmissionMaterialType = Omit<JSX.IntrinsicElements['meshPhysicalMaterial'], 'args' | 'roughness' | 'thickness' | 'transmission'> & {
    transmission?: number;
    thickness?: number;
    roughness?: number;
    chromaticAberration?: number;
    anisotropy?: number;
    anisotropicBlur?: number;
    distortion?: number;
    distortionScale?: number;
    temporalDistortion?: number;
    buffer?: THREE.Texture;
    time?: number;
    args?: [samples: number, transmissionSampler: boolean];
};
type MeshTransmissionMaterialProps = Omit<MeshTransmissionMaterialType, 'args'> & {
    transmissionSampler?: boolean;
    backside?: boolean;
    backsideThickness?: number;
    backsideEnvMapIntensity?: number;
    resolution?: number;
    backsideResolution?: number;
    samples?: number;
    background?: THREE.Texture | THREE.Color;
};
declare global {
    namespace JSX {
        interface IntrinsicElements {
            meshTransmissionMaterial: MeshTransmissionMaterialType;
        }
    }
}
export declare const MeshTransmissionMaterial: ForwardRefComponent<MeshTransmissionMaterialProps, JSX.IntrinsicElements['meshTransmissionMaterial']>;
export {};
