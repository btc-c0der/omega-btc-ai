/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import * as THREE from 'three';
import { Color } from '@react-three/fiber';
import { ForwardRefComponent } from '../helpers/ts-utils';
export type ImageProps = Omit<JSX.IntrinsicElements['mesh'], 'scale'> & {
    segments?: number;
    scale?: number | [number, number];
    color?: Color;
    zoom?: number;
    radius?: number;
    grayscale?: number;
    toneMapped?: boolean;
    transparent?: boolean;
    opacity?: number;
    side?: THREE.Side;
} & ({
    texture: THREE.Texture;
    url?: never;
} | {
    texture?: never;
    url: string;
});
type ImageMaterialType = JSX.IntrinsicElements['shaderMaterial'] & {
    scale?: number[];
    imageBounds?: number[];
    radius?: number;
    resolution?: number;
    color?: Color;
    map: THREE.Texture;
    zoom?: number;
    grayscale?: number;
};
declare global {
    namespace JSX {
        interface IntrinsicElements {
            imageMaterial: ImageMaterialType;
        }
    }
}
export declare const Image: ForwardRefComponent<ImageProps, THREE.Mesh>;
export {};
