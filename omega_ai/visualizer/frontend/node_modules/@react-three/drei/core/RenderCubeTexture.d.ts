/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import * as THREE from 'three';
import * as React from 'react';
import { ComputeFunction, ReactThreeFiber } from '@react-three/fiber';
import { ForwardRefComponent } from '../helpers/ts-utils';
export type RenderCubeTextureProps = Omit<JSX.IntrinsicElements['texture'], 'rotation'> & {
    stencilBuffer?: boolean;
    depthBuffer?: boolean;
    generateMipmaps?: boolean;
    renderPriority?: number;
    eventPriority?: number;
    frames?: number;
    compute?: ComputeFunction;
    flip?: boolean;
    resolution?: number;
    children: React.ReactNode;
    near?: number;
    far?: number;
    position?: ReactThreeFiber.Vector3;
    rotation?: ReactThreeFiber.Euler;
    scale?: ReactThreeFiber.Vector3;
    quaternion?: ReactThreeFiber.Quaternion;
    matrix?: ReactThreeFiber.Matrix4;
    matrixAutoUpdate?: boolean;
};
export type RenderCubeTextureApi = {
    scene: THREE.Scene;
    fbo: THREE.WebGLCubeRenderTarget;
    camera: THREE.CubeCamera;
};
export declare const RenderCubeTexture: ForwardRefComponent<RenderCubeTextureProps, RenderCubeTextureApi>;
