/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import { ReactThreeFiber } from '@react-three/fiber';
import { ArcballControls as ArcballControlsImpl } from 'three-stdlib';
import type { Event, OrthographicCamera, PerspectiveCamera } from 'three';
import { ForwardRefComponent } from '../helpers/ts-utils';
export type ArcballControlsProps = Omit<ReactThreeFiber.Overwrite<ReactThreeFiber.Object3DNode<ArcballControlsImpl, typeof ArcballControlsImpl>, {
    target?: ReactThreeFiber.Vector3;
    camera?: OrthographicCamera | PerspectiveCamera;
    domElement?: HTMLElement;
    regress?: boolean;
    makeDefault?: boolean;
    onChange?: (e?: Event) => void;
    onStart?: (e?: Event) => void;
    onEnd?: (e?: Event) => void;
}>, 'ref'>;
export declare const ArcballControls: ForwardRefComponent<ArcballControlsProps, ArcballControlsImpl>;
