/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

'use strict';

var $SyntaxError = require('es-errors/syntax');
var $TypeError = require('es-errors/type');
var callBound = require('call-bound');
var isInteger = require('math-intrinsics/isInteger');

var $BigIntToString = callBound('BigInt.prototype.toString', true);

// https://262.ecma-international.org/14.0/#sec-numeric-types-bigint-tostring

module.exports = function BigIntToString(x, radix) {
	if (typeof x !== 'bigint') {
		throw new $TypeError('Assertion failed: `x` must be a BigInt');
	}

	if (!isInteger(radix) || radix < 2 || radix > 36) {
		throw new $TypeError('Assertion failed: `radix` must be an integer >= 2 and <= 36');
	}

	if (!$BigIntToString) {
		throw new $SyntaxError('BigInt is not supported');
	}

	return $BigIntToString(x, radix); // steps 1 - 12
};
