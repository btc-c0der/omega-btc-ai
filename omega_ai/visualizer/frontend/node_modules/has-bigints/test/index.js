/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

'use strict';

var test = require('tape');
var hasBigInts = require('..');

test('interface', function (t) {
	t.equal(typeof hasBigInts, 'function', 'is a function');
	t.equal(typeof hasBigInts(), 'boolean', 'returns a boolean');
	t.end();
});

test('BigInts are supported', { skip: !hasBigInts() }, function (t) {
	t.equal(typeof BigInt, 'function', 'global BigInt is a function');
	if (typeof BigInt !== 'function') {
		return;
	}

	t.equal(BigInt(42), BigInt(42), '42n === 42n');
	t['throws'](
		function () { BigInt(NaN); },
		RangeError,
		'NaN is not an integer; BigInt(NaN) throws'
	);

	t['throws'](
		function () { BigInt(Infinity); },
		RangeError,
		'Infinity is not an integer; BigInt(Infinity) throws'
	);

	t['throws'](
		function () { BigInt(1.1); },
		RangeError,
		'1.1 is not an integer; BigInt(1.1) throws'
	);

	t.end();
});

test('BigInts are not supported', { skip: hasBigInts() }, function (t) {
	t.equal(typeof BigInt, 'undefined', 'global BigInt is undefined');

	t.end();
});
