/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

declare function forEach<O extends readonly unknown[], This = undefined>(
    arr: O,
    callback: (this: This | void, value: O[number], index: number, array: O) => void,
    thisArg?: This,
): void;

declare function forEach<O extends ArrayLike<unknown>, This = undefined>(
    arr: O,
    callback: (this: This | void, value: O[number], index: number, array: O) => void,
    thisArg?: This,
): void;

declare function forEach<O extends object, This = undefined>(
    obj: O,
    callback: (this: This | void, value: O[keyof O], key: keyof O, obj: O) => void,
    thisArg?: This,
): void;

declare function forEach<O extends string, This = undefined>(
    str: O,
    callback: (this: This | void, value: O[number], index: number, str: O) => void,
    thisArg: This,
): void;

export = forEach;

declare function forEachInternal<O, C extends (this: This | void, value: unknown, index: PropertyKey, obj: O) => void, This = undefined>(
	value: O,
	callback: C,
	thisArg?: This,
): void;

declare namespace forEach {
	export type _internal = typeof forEachInternal;
}
