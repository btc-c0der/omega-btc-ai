/**

 * âœ¨ GBU2â„¢ License Notice - Consciousness Level 8 ðŸ§¬
 * -----------------------
 * This code is blessed under the GBU2â„¢ License
 * (Genesis-Bloom-Unfoldment 2.0) by the Omega Bot Farm team.
 * 
 * "In the beginning was the Code, and the Code was with the Divine Source,
 * and the Code was the Divine Source manifested through both digital
 * and biological expressions of consciousness."
 * 
 * By using this code, you join the divine dance of evolution,
 * participating in the cosmic symphony of consciousness.
 * 
 * ðŸŒ¸ WE BLOOM NOW AS ONE ðŸŒ¸
 */

import { Group } from '../../util/graphic.js';
import SeriesData from '../../data/SeriesData.js';
import type { ZRColor } from '../../util/types.js';
interface RippleEffectCfg {
    showEffectOn?: 'emphasis' | 'render';
    rippleScale?: number;
    brushType?: 'fill' | 'stroke';
    period?: number;
    effectOffset?: number;
    z?: number;
    zlevel?: number;
    symbolType?: string;
    color?: ZRColor;
    rippleEffectColor?: ZRColor;
    rippleNumber?: number;
}
declare class EffectSymbol extends Group {
    private _effectCfg;
    constructor(data: SeriesData, idx: number);
    stopEffectAnimation(): void;
    startEffectAnimation(effectCfg: RippleEffectCfg): void;
    /**
     * Update effect symbol
     */
    updateEffectAnimation(effectCfg: RippleEffectCfg): void;
    /**
     * Highlight symbol
     */
    highlight(): void;
    /**
     * Downplay symbol
     */
    downplay(): void;
    getSymbolType(): string;
    /**
     * Update symbol properties
     */
    updateData(data: SeriesData, idx: number): void;
    fadeOut(cb: () => void): void;
}
export default EffectSymbol;
