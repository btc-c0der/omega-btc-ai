[pytest]
testpaths = test_fibonacci_detector
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers
markers =
    swing_points: Tests for swing point detection
    fibonacci_levels: Tests for Fibonacci level calculations
    trap_detection: Tests for trap detection and confluence
    fractal_harmony: Tests for fractal and golden ratio detection
    error_handling: Tests for error handling and edge cases
    redis_integration: Tests for Redis integration

# Test configuration
addopts = 
    --verbose
    --color=yes
    --cov=omega_ai.mm_trap_detector.fibonacci_detector
    --cov-report=term-missing
    --cov-report=html
    --cov-fail-under=79
    --no-cov-on-fail

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test isolation
isolated = true 