{
  "timestamp": "2025-04-05T08:56:44.540869",
  "total_tests": 3,
  "passed_tests": 1,
  "failed_tests": 2,
  "total_execution_time": 0.99888014793396,
  "results": {
    "unit": {
      "success": true,
      "output": "============================= test session starts ==============================\nplatform darwin -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0 -- /Users/fsiqueira/Desktop/GitHub/omega-btc-ai/src/omega_bot_farm/qa/venv/bin/python3.13\ncachedir: .pytest_cache\nmetadata: {'Python': '3.13.2', 'Platform': 'macOS-15.3.1-arm64-arm-64bit-Mach-O', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.5.0'}, 'Plugins': {'html': '4.1.1', 'metadata': '3.1.1', 'cov': '6.1.0'}, 'AWS_REGION': 'us-east-1'}\nrootdir: /Users/fsiqueira/Desktop/GitHub/omega-btc-ai/src\nconfigfile: pytest.ini\nplugins: html-4.1.1, metadata-3.1.1, cov-6.1.0\ncollecting ... collected 27 items\n\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_quantum_dimension_init PASSED [  3%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_quantum_dimension_measure PASSED [  7%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_quantum_dimension_measure_state_change PASSED [ 11%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_quantum_dimension_to_dict PASSED [ 14%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_ai_model_init PASSED [ 18%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_ai_model_to_dict PASSED [ 22%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_ai_model_from_dict PASSED [ 25%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_test_generator_init PASSED [ 29%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_test_generator_generate_test PASSED [ 33%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_test_generator_to_dict PASSED [ 37%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_anomaly_detector_init PASSED [ 40%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_anomaly_detector_detect_anomalies_none PASSED [ 44%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_anomaly_detector_detect_anomalies_found PASSED [ 48%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_anomaly_detector_calculate_severity PASSED [ 51%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_anomaly_detector_to_dict PASSED [ 55%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_quantum_ai_model_init PASSED [ 59%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_quantum_ai_model_initialize_default_knowledge PASSED [ 62%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_quantum_ai_model_add_components PASSED [ 66%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_quantum_ai_model_generate_test PASSED [ 70%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_quantum_ai_model_detect_anomalies PASSED [ 74%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_quantum_ai_model_get_model_by_capability PASSED [ 77%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_quantum_ai_model_measure_dimensions PASSED [ 81%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_quantum_ai_model_quantum_entangle PASSED [ 85%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_quantum_ai_model_quantum_collapse PASSED [ 88%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_quantum_ai_model_save_to_file PASSED [ 92%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_quantum_ai_model_load_from_file PASSED [ 96%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_knowledge_model.py::test_create_quantum_ai_knowledge_model PASSED [100%]\n\n- generated xml file: /Users/fsiqueira/Desktop/GitHub/omega-btc-ai/src/omega_bot_farm/qa/tests/reports/quantum_test_report_20250405_085643_unit.xml -\n- Generated html report: file:///Users/fsiqueira/Desktop/GitHub/omega-btc-ai/src/omega_bot_farm/qa/tests/reports/quantum_test_report_20250405_085643_unit.html -\n============================== 27 passed in 0.08s ==============================\n",
      "error_output": "",
      "execution_time": 0.2185971736907959,
      "returncode": 0
    },
    "integration": {
      "success": false,
      "output": "============================= test session starts ==============================\nplatform darwin -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0 -- /Users/fsiqueira/Desktop/GitHub/omega-btc-ai/src/omega_bot_farm/qa/venv/bin/python3.13\ncachedir: .pytest_cache\nmetadata: {'Python': '3.13.2', 'Platform': 'macOS-15.3.1-arm64-arm-64bit-Mach-O', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.5.0'}, 'Plugins': {'html': '4.1.1', 'metadata': '3.1.1', 'cov': '6.1.0'}, 'AWS_REGION': 'us-east-1'}\nrootdir: /Users/fsiqueira/Desktop/GitHub/omega-btc-ai/src\nconfigfile: pytest.ini\nplugins: html-4.1.1, metadata-3.1.1, cov-6.1.0\ncollecting ... collected 7 items\n\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_integration.py::test_dimension_measurement_affects_anomaly_detection PASSED [ 14%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_integration.py::test_quantum_entanglement_and_collapse_workflow PASSED [ 28%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_integration.py::test_test_generation_uses_dimensions PASSED [ 42%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_integration.py::test_model_persistence_roundtrip PASSED [ 57%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_integration.py::test_cross_component_interaction PASSED [ 71%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_integration.py::test_capability_based_model_selection FAILED [ 85%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_integration.py::test_multiple_language_support PASSED [100%]\n\n=================================== FAILURES ===================================\n____________________ test_capability_based_model_selection _____________________\n\nai_model = <src.omega_bot_farm.qa.quantum_ai_knowledge_model.QuantumAIKnowledgeModel object at 0x106ad48d0>\n\n    def test_capability_based_model_selection(ai_model):\n        \"\"\"Test selecting models based on capabilities.\"\"\"\n        # Check that we have some models with capabilities\n        all_models = list(ai_model.models.values())\n>       assert len(all_models) > 0\nE       assert 0 > 0\nE        +  where 0 = len([])\n\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_integration.py:145: AssertionError\n- generated xml file: /Users/fsiqueira/Desktop/GitHub/omega-btc-ai/src/omega_bot_farm/qa/tests/reports/quantum_test_report_20250405_085643_integration.xml -\n- Generated html report: file:///Users/fsiqueira/Desktop/GitHub/omega-btc-ai/src/omega_bot_farm/qa/tests/reports/quantum_test_report_20250405_085643_integration.html -\n=========================== short test summary info ============================\nFAILED src/omega_bot_farm/qa/tests/test_quantum_ai_integration.py::test_capability_based_model_selection\n========================= 1 failed, 6 passed in 0.06s ==========================\n",
      "error_output": "",
      "execution_time": 0.1982707977294922,
      "returncode": 1
    },
    "performance": {
      "success": false,
      "output": "============================= test session starts ==============================\nplatform darwin -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0 -- /Users/fsiqueira/Desktop/GitHub/omega-btc-ai/src/omega_bot_farm/qa/venv/bin/python3.13\ncachedir: .pytest_cache\nmetadata: {'Python': '3.13.2', 'Platform': 'macOS-15.3.1-arm64-arm-64bit-Mach-O', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.5.0'}, 'Plugins': {'html': '4.1.1', 'metadata': '3.1.1', 'cov': '6.1.0'}, 'AWS_REGION': 'us-east-1'}\nrootdir: /Users/fsiqueira/Desktop/GitHub/omega-btc-ai/src\nconfigfile: pytest.ini\nplugins: html-4.1.1, metadata-3.1.1, cov-6.1.0\ncollecting ... collected 6 items\n\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_performance.py::test_model_initialization_time PASSED [ 16%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_performance.py::test_test_generation_performance FAILED [ 33%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_performance.py::test_anomaly_detection_performance PASSED [ 50%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_performance.py::test_memory_usage PASSED [ 66%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_performance.py::test_model_save_load_performance PASSED [ 83%]\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_performance.py::test_parallel_dimensional_analysis PASSED [100%]\n\n=================================== FAILURES ===================================\n_______________________ test_test_generation_performance _______________________\n\nai_model = <src.omega_bot_farm.qa.quantum_ai_knowledge_model.QuantumAIKnowledgeModel object at 0x109c73c50>\nlarge_code_sample = \"variable_1 = 1 * 2\\nvariable_2 = 2 * 2\\nvariable_3 = 3 * 2\\nvariable_4 = 4 * 2\\ndef test_function_5(x, y):\\n    '''Fu...9 = 999 * 2\\nclass TestClass100:\\n    def __init__(self):\\n        self.value = 1000\\n        self.name = 'Class100'\\n\"\n\n    def test_test_generation_performance(ai_model, large_code_sample):\n        \"\"\"Test the performance of test generation.\"\"\"\n        # Measure execution time for different code sizes\n        code_sizes = [10, 100, 500, 1000]\n        times = []\n    \n        for size in code_sizes:\n            # Get a slice of the code\n            code_slice = \"\\n\".join(large_code_sample.split(\"\\n\")[:size])\n    \n            # Measure time\n            time_taken = measure_execution_time(ai_model.generate_test, code_slice)\n            times.append(time_taken)\n    \n            print(f\"Test generation time for {size} lines: {time_taken:.4f} seconds\")\n    \n        # Create a performance graph\n        reports_dir = os.path.join(os.path.dirname(__file__), \"reports\")\n        os.makedirs(reports_dir, exist_ok=True)\n    \n        plot_performance_results(\n            \"Test Generation Performance\",\n            [f\"{size} lines\" for size in code_sizes],\n            times,\n            \"Time (seconds)\",\n            os.path.join(reports_dir, \"test_generation_performance.png\")\n        )\n    \n        # Check scaling - should be sub-quadratic\n        # Calculate scaling factor from smallest to largest\n>       scaling_factor = times[-1] / times[0]\nE       ZeroDivisionError: float division by zero\n\nsrc/omega_bot_farm/qa/tests/test_quantum_ai_performance.py:153: ZeroDivisionError\n----------------------------- Captured stdout call -----------------------------\nTest generation time for 10 lines: 0.0000 seconds\nTest generation time for 100 lines: 0.0000 seconds\nTest generation time for 500 lines: 0.0000 seconds\nTest generation time for 1000 lines: 0.0000 seconds\n- generated xml file: /Users/fsiqueira/Desktop/GitHub/omega-btc-ai/src/omega_bot_farm/qa/tests/reports/quantum_test_report_20250405_085643_performance.xml -\n- Generated html report: file:///Users/fsiqueira/Desktop/GitHub/omega-btc-ai/src/omega_bot_farm/qa/tests/reports/quantum_test_report_20250405_085643_performance.html -\n=========================== short test summary info ============================\nFAILED src/omega_bot_farm/qa/tests/test_quantum_ai_performance.py::test_test_generation_performance\n========================= 1 failed, 5 passed in 0.42s ==========================\n",
      "error_output": "",
      "execution_time": 0.5820121765136719,
      "returncode": 1
    }
  }
}